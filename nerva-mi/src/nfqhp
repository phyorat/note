<?php
include 'sys_common.php';
include_once 'audit.php';
include_once 'geocoder.php';


function BuildDetailTemplate()
{
	$response = array(
		'status'=>REQ_STATUS_SUCCESS,
		'operation'=>REQ_OPERATION_SUCCESS,
		'total'=>0,
		'data'=>array()
	);
	return $response;
}

if (! isset($_SERVER['REQUEST_METHOD']))
{
	SendResponse();
	debug("request should specify request_method");
}
else
{
	session_write_close();
	$method = $_SERVER['REQUEST_METHOD'];

	if ($method != 'POST')
	{
		SendResponse();
		debug("method must be post");
	}
	else
	{
		$validated = ValidateSession();
		if (200 != $validated)
		{
			SendError($validated);
			exit;
		}
	
		$response = array(
			'status'=>REQ_STATUS_SUCCESS,
			'operation'=>REQ_OPERATION_FAILURE,
		);

		$response = BuildDetailTemplate();
		$req = file_get_contents('php://input');
		$nfq_data = json_decode($req, true);//convert to associative array^M

		$ret = false;
		if ( array_key_exists('s_ip', $nfq_data) || array_key_exists('d_ip', $nfq_data) )
		{
			$ret = nf_query($response, $nfq_data);
		}
		else if ( array_key_exists('scale', $nfq_data) )
		{
			$ret = netflow_stall_query($response, $nfq_data);
		}

	  	if ( false == $ret ) {
			//AuditLog($_SESSION['username'], "流量查询失败", "流量查询操作", "失败");
		}
		else {
			//AuditLog($_SESSION['username'], "流量查询成功", "流量查询操作", "成功");
			if ( 0 == $response['total'] ) {
				/*array_push($response['data'],
					array('-', '-', 0, 0, 0));*/
			}
		}

		echo json_encode($response, JSON_UNESCAPED_UNICODE);
		return $ret;
	}
}

function netflow_stall_query(&$response, $nfq_data)
{
	//Parameters
	$if_scale = $nfq_data['scale'];

	if ( array_key_exists('time_t', $nfq_data) ) {
		$time_type = $nfq_data['time_t'];
		if ( array_key_exists('time_c', $nfq_data) ) {
			$time_cnt = $nfq_data['time_c'];
		}
		else {
			if ( 1 == $time_type ) {
				$time_cnt = 72;
			}
			else if ( 2 == $time_type ) {
				$time_cnt = 30;
			}
			else {
				$response['operation'] = REQ_INVALID_PARAMETER;
				return false;
			}
		}
	}
	else {
		$time_type = 1;
		$time_cnt = 72;
	}

	if ( array_key_exists('scale_date', $nfq_data) ) {
		$tv_start = strtotime($nfq_data['scale_date']);
		if ( 1 == $time_type ) {
			$tv_end = $tv_start + 86400;
			$time_cnt = 24;
		}
		else if ( 2 == $time_type ) {
			$tv_end = strtotime($nfq_data['scale_date'].' +1 month');
			$time_cnt = ($tv_end - $tv_start)/86400;
		}
		else {
			$response['operation'] = REQ_INVALID_PARAMETER;
			return false;
		}

		//$tv_start = date('Y-m-d H:i:s', $tv_start);
		//$tv_end = date('Y-m-d H:i:s', $tv_end);
	}
	else {
		$tv_end = time();
		$tv_end = $tv_end - ($tv_end%3600);
		if ( 1 == $time_type ) {
			$tv_start = $tv_end - (3600*$time_cnt);
		}
		else if ( 2 == $time_type ) {
			$tv_start = $tv_end - (86400*$time_cnt);
		}
		else {
			$response['operation'] = REQ_INVALID_PARAMETER;
			return false;
		}
	}

	if ( array_key_exists('data_t', $nfq_data) )
		$data_type = $nfq_data['data_t'];
	else
		$data_type = 1;

	//Return Json
	$count = 0;
	$div_port = FALSE;

	//Mysql Connection
	$conn = CreateConn();
	if (!$conn)
	{
		$response['operation'] = REQ_INTERNAL_ERROR;
		return false;
	}
	CharSet($conn, "utf8");
	SelectDB($conn, MYSQL_DB);

	//Proceed
	if ( 0 == $if_scale ) {
		$sql_stall = 'SELECT direction,bps FROM protocol_stats WHERE ps_id=1';//name="ip"';
		$stall_res = ExecuteSQL($conn, $sql_stall);
		if (!$stall_res || GetNumOfResultRows($stall_res) == 0) {
			$response['operation'] = REQ_INTERNAL_ERROR;
			CloseConn($conn);
			return false;
		}

		$stall_bup = 0;
		$stall_bdown = 0;
		$stall_bsz = 0;
		while ( $stall_row=FetchAssocArray($stall_res) ) {
			if ( NULL == $stall_row['direction'] )
				continue;

			if ( "1" == $stall_row['direction'] )
				$stall_bup = $stall_row['bps'];
			if ( "2" == $stall_row['direction'] )
				$stall_bdown = $stall_row['bps'];
			$stall_bsz += $stall_row['bps'];
		}

		array_push($response['data'],
			array('-', '-', $stall_bup, $stall_bdown, (string)$stall_bsz));
		$count = $count + 1;
	}
	else if ( 4 == $if_scale ) {
		$sql_stall = 'SELECT direction,bsz FROM protocol_stats WHERE ps_id=1';//name="ip"';
		$stall_res = ExecuteSQL($conn, $sql_stall);
		if (!$stall_res || GetNumOfResultRows($stall_res) == 0) {
			$response['operation'] = REQ_INTERNAL_ERROR;
			CloseConn($conn);
			return false;
		}

		$stall_bup = 0;
		$stall_bdown = 0;
		$stall_bsz = 0;
		while ( $stall_row=FetchAssocArray($stall_res) ) {
			if ( NULL == $stall_row['direction'] )
				continue;

			if ( "1" == $stall_row['direction'] )
				$stall_bup = $stall_row['bsz'];
			if ( "2" == $stall_row['direction'] )
				$stall_bdown = $stall_row['bsz'];
			$stall_bsz += $stall_row['bsz'];
		}

		array_push($response['data'],
			array('-', '-', $stall_bup, $stall_bdown, (string)$stall_bsz));
		$count = $count + 1;
	}
	else if ( 1 == $if_scale ) {
		$sql_stall = 'SELECT dt_ts AS dt,bsz_up AS bup,bsz_down AS bdown,bsz AS bsz FROM';
                if ( 1 == $time_type )
			$sql_stall .= ' nfproto_hour';
		else if ( 2 == $time_type )
			$sql_stall .= ' nfproto_day';
		else {
			$response['operation'] = REQ_INVALID_PARAMETER;
			CloseConn($conn);
			return false;
		}

		$sql_stall .= ' WHERE ps_id=1';//name="ip"';
		if ( $tv_start > 0 && $tv_end > $tv_start  )
			$sql_stall .= ' AND tv_upd>'.$tv_start.' AND tv_upd<='.$tv_end;

		$sql_stall .= ' ORDER BY dt_ts ASC LIMIT '.$time_cnt;

		//echo $sql_stall."<br>";
		$stall_res = ExecuteSQL($conn, $sql_stall);
		if (!$stall_res || GetNumOfResultRows($stall_res) == 0) {
			$response['operation'] = REQ_OPERATION_SUCCESS;
			$response['total'] = intval($count);
			CloseConn($conn);
			return true;
		}

		while ( $stall_row=FetchAssocArray($stall_res) ) {
			if ( NULL == $stall_row['bup'] || NULL == $stall_row['bdown'] || NULL == $stall_row['bsz'] )
				continue;
			$stall_bup = $stall_row['bup'];
			$stall_bdown = $stall_row['bdown'];
			$stall_bsz = $stall_row['bsz'];

			$stall_ts = $stall_row['dt'];
			$stall_ts = str_replace(',', ' ', $stall_ts);
			$stall_ts .= ':00:00';

			array_push($response['data'],
				array($stall_ts, '-', $stall_bup, $stall_bdown, $stall_bsz));
			$count = $count + 1;
		}
	}
	else if ( 2 == $if_scale ) {
		$sql_stall = 'SELECT MIN(dt_ts) AS start,MAX(dt_ts) AS end,';
		$sql_stall .= 'SUM(bsz_up) AS bup,SUM(bsz_down) AS bdown,SUM(bsz) AS bsz FROM ';
		if ( 1 == $time_type ) {
			$sql_stall .= '(SELECT * FROM nfproto_hour WHERE ps_id=1';//name="ip"';
			$sql_stall .= ' ORDER BY dt_ts DESC LIMIT '.$time_cnt.') AS hours';
		}
		else if ( 2 == $time_type ) {
			$sql_stall .= '(SELECT * FROM nfproto_day WHERE ps_id=1';//name="ip"';
			$sql_stall .= ' ORDER BY dt_ts DESC LIMIT '.$time_cnt.') AS days';
		}
		else {
			$response['operation'] = REQ_INVALID_PARAMETER;
			CloseConn($conn);
			return false;
		}

		//echo $sql_stall."<br>";
		$stall_res = ExecuteSQL($conn, $sql_stall);
		if (!$stall_res || GetNumOfResultRows($stall_res) == 0) {
			$response['operation'] = REQ_OPERATION_SUCCESS;
			$response['total'] = intval($count);
			CloseConn($conn);
			return true;
		}

		$stall_row = FetchAssocArray($stall_res);
		if ( NULL == $stall_row['bup'] || NULL == $stall_row['bdown'] || NULL == $stall_row['bsz'] ) {
			$response['operation'] = REQ_OPERATION_SUCCESS;
			$response['total'] = intval($count);
			CloseConn($conn);
			return true;
		}
		$stall_bup = $stall_row['bup'];
		$stall_bdown = $stall_row['bdown'];
		$stall_bsz = $stall_row['bsz'];

		array_push($response['data'],
			array($stall_row['start'], $stall_row['end'], $stall_bup, $stall_bdown, $stall_bsz));
		$count = $count + 1;
	}
	else if ( 3 == $if_scale ) {
		if ( 1 != $time_type && 2 != $time_type) {
			$response['operation'] = REQ_INVALID_PARAMETER;
			CloseConn($conn);
			return false;
		}

		if ( 1 == $data_type ) {
			$bsz_type = array('bsz_up', 'bsz_down', 'bsz');
			$bsz_type_as = $bsz_type;
			$bsz_type_sum = $bsz_type;
			$data_t_name = 'name';
			$data_t_grp = $data_t_name;
			$data_t_grp_set = '';
			$data_t_cond = 'port_idx=55';
			$data_t_column = 3;
			$date_t_scl = 'dt_ts';

			$ts_scl_table = array(
				1 => 'nfproto_hour',
				2 => 'nfproto_day',
				3 => 'nfproto_month',
				4 => 'nfproto_year',
			);
		}
		else if ( 2 == $data_type ) {
			$bsz_type = array('bsz_up', 'bsz_down', 'bsz');
			$bsz_type_as = $bsz_type;
			$bsz_type_sum = $bsz_type;
			$data_t_name = 'port';
			$data_t_grp = $data_t_name;
			$data_t_grp_set = '';
			$data_t_cond = 'port>0';
			$data_t_column = 3;
			$date_t_scl = 'dt_ts';

			$ts_scl_table = array(
				1 => 'nfproto_hour',
				2 => 'nfproto_day',
				3 => 'nfproto_month',
				4 => 'nfproto_year',
			);
		}
		else if ( 3 == $data_type ) {
			$bsz_type = array('bsz_up', 'bsz_dn', 'bsz_up,bsz_dn');
			$bsz_type_as = array('bsz_up', 'bsz_dn', 'bsz');
			$bsz_type_sum = array('bsz_up', 'bsz_dn', 'bsz_up+bsz_dn');
			$data_t_name = 'geo_id';
			$data_t_grp = 'geo_gp';
			$stall_res = ExecuteSQL($conn, 'SELECT id FROM nfgeo_state WHERE geo_id=1814991');
			if (!$stall_res || GetNumOfResultRows($stall_res) == 0) {
				$data_t_grp_set = ',(geo_id>>52) as geo_gp';
			}
			else {
				$stall_row=FetchAssocArray($stall_res); 
				if ( NULL == $stall_row['id'] )
					$data_t_grp_set = ',(geo_id>>52) as geo_gp';
				else
					$data_t_grp_set = ',IF((geo_id>>52)='.$stall_row['id'].', geo_id, (geo_id>>52)) as geo_gp';
			}
			$data_t_cond = '1';
			$data_t_column = 3;
			$date_t_scl = 'tv_upd';

			$ts_scl_table = array(
				1 => 'nfiptet_geo_scale_l2',
				2 => 'nfiptet_geo_scale_l3',
				3 => 'nfiptet_geo_scale_l3',
				4 => 'nfiptet_geo_scale_l3',
			);
		}
		else {
			$response['operation'] = REQ_INVALID_PARAMETER;
			CloseConn($conn);
			return false;
		}

		//Date Column
		$d_type = array('up', 'down', 'total');

		if ( $tv_start > 0 && $tv_end > $tv_start  )
			$ts_range_cond = ' AND tv_upd>'.$tv_start.' AND tv_upd<='.$tv_end;
		else
			$ts_range_cond = '';

		$client=getClient();
		for($i=0; $i<3; $i++) {
			$date_split = array();
			//$sql_stall = 'SELECT MIN(dt_ts) AS start,MAX(dt_ts) AS end,';
			$sql_stall = 'SELECT SUM('.$bsz_type_sum[$i].') AS '.$bsz_type_as[$i].', '.$data_t_name;
			$sql_stall .= ' FROM (SELECT '.$bsz_type[$i].','.$data_t_name.$data_t_grp_set.' FROM '.$ts_scl_table[$time_type].' WHERE '.$data_t_cond.$ts_range_cond;
			$sql_stall .= ' ORDER BY '.$date_t_scl.' DESC';
			//$sql_stall .= ' LIMIT '.$time_cnt;
			$sql_stall .= ') AS ts_scl';
			$sql_stall .= ' GROUP BY ts_scl.'.$data_t_grp.' ORDER BY '.$bsz_type_as[$i].' DESC LIMIT 5';

			//echo $sql_stall."<br>";
			$stall_res = ExecuteSQL($conn, $sql_stall);
			if (!$stall_res || GetNumOfResultRows($stall_res) == 0) {
				/*$response['operation'] = REQ_OPERATION_SUCCESS;
				$response['total'] = intval($count);
				CloseConn($conn);
				return true;*/
				array_push($date_split,
					array('-', '-', 0, 0));
			}
			else {
				while ( $stall_row=FetchAssocArray($stall_res) ) {
					if ( NULL == $stall_row[$bsz_type_as[$i]] || NULL == $stall_row[$data_t_name] )
						continue;
					$stall_bsz = $stall_row[$bsz_type_as[$i]];

					if ( 3 == $data_type ) {
						$targ_name = '未知';
						$data = [
							'index' => "geo_state",
							'body' =>["query"=>["term"=>["geo_index"=>$stall_row[$data_t_name]]]]
						];
						$return = myOperation('search',$data,$client);
						$result = $return['result'];
						if ($return["success"]) {
							if ( $result["hits"]['total'] > 0 ) {
								if ( "CN" == $result["hits"]['hits'][0]['_source']['country_iso'] ) {
									$targ_name = $result["hits"]['hits'][0]['_source']['city_cn'];
									if ("__" == $targ_name)
										$targ_name = $result["hits"]['hits'][0]['_source']['subdivision_cn'];
									if ("__" == $targ_name)
										$targ_name = "中国(未知/移动数据)";//$result["hits"]['hits'][0]['_source']['country_cn'];
								}
								else
									$targ_name = $result["hits"]['hits'][0]['_source']['country_cn'];
							}
						}
					}
					else {
						$targ_name = $stall_row[$data_t_name];
					}

					array_push($date_split,
						array('-', '-', $targ_name, $stall_bsz));
				}
			}

			$response['data'][$d_type[$i]] = $date_split;
			$count = $count + 1;
		}
		unset($client);
	}
	else if ( 5 == $if_scale ) {
		global $geocode;
		if ( 1 != $time_type && 2 != $time_type) {
			$response['operation'] = REQ_INVALID_PARAMETER;
			CloseConn($conn);
			return false;
		}

		if ( 3 == $data_type ) {
			$bsz_type = array('bsz_up');
			$data_tv = array('tu');
			$data_t_name = 'geo_id';

			$ts_scl_table = array(
				1 => 'nfiptet_geo_scale_l2',
				2 => 'nfiptet_geo_scale_l3',
				3 => 'nfiptet_geo_scale_l3',
				4 => 'nfiptet_geo_scale_l3',
			);
		}
		else {
			$response['operation'] = REQ_INVALID_PARAMETER;
			CloseConn($conn);
			return false;
		}

		//Date Column
		$d_type = array('up', 'down', 'total');

		if ( $tv_start > 0 && $tv_end > $tv_start  )
			$ts_range_cond = ' tv_upd>'.$tv_start.' AND tv_upd<='.$tv_end;
		else
			$ts_range_cond = '';
		
		$client=getClient();
		$geo_map_info = array();
		$date_tv_sum = array();
		$geo_up_overview = array();
		$geo_up_stats_max = 0;
		for($i=0; $i<1; $i++) {
			$date_split = array();
			$sql_stall = 'SELECT '.$data_t_name.',SUM(bsz_up) AS '.$bsz_type[$i].',max(tv_upd) AS '.$data_tv[$i];
			$sql_stall .= ' FROM '.$ts_scl_table[$time_type].' WHERE '.$ts_range_cond;
			$sql_stall .= ' GROUP BY scl_cmb,'.$data_t_name.' ORDER BY '.$data_t_name.','.$data_tv[$i].' DESC';

			//echo $sql_stall."<br>";
			$stall_res = ExecuteSQL($conn, $sql_stall);
			if (!$stall_res || GetNumOfResultRows($stall_res) == 0) {
				/*array_push($date_split,
					array('-', '-', 0, 0));*/
			}
			else {
				$geo_id_this = 0;
				$targ_name = "";
				$geo_node = null;
				$geo_state_rec = array();
				while ( $stall_row=FetchAssocArray($stall_res) ) {
					if ( NULL == $stall_row[$bsz_type[$i]] || NULL == $stall_row[$data_tv[$i]] )
						continue;
					$stall_bsz = $stall_row[$bsz_type[$i]];
					$stall_tv = $stall_row[$data_tv[$i]];
					$geo_idx = $stall_row[$data_t_name];

					$geo_state_idx = $geo_idx>>52;
					if ( array_key_exists($geo_state_idx, $geo_state_rec) ) {
						$targ_name = $geo_state_rec[$geo_state_idx]['name'];
						$geo_node = $geo_state_rec[$geo_state_idx]['node'];
					}
					else if ( $geo_id_this != $geo_idx ) {
						$targ_name = '__';
						$data = [
							'index' => "geo_state",
							'body' =>["query"=>["term"=>["geo_index"=>$geo_idx]]]
						];
						$return = myOperation('search',$data,$client);
						$result = $return['result'];
						if ($return["success"]) {
							if ( $result["hits"]['total'] > 0 ) {
								if ( "CN" == $result["hits"]['hits'][0]['_source']['country_iso'] ) {
									$targ_name = $result["hits"]['hits'][0]['_source']['city_cn'];
									$targ_longitude = $result["hits"]['hits'][0]['_source']['longitude'];
									$targ_latitude = $result["hits"]['hits'][0]['_source']['latitude'];
									$geo_node = array($targ_longitude, $targ_latitude);
								}
								else {
									$targ_name = $result["hits"]['hits'][0]['_source']['country_cn'];
									if (array_key_exists($targ_name, $geocode))
										$geo_node = array($geocode[$targ_name][1],$geocode[$targ_name][0]);
									else
										$geo_node = array(0.0, 0.0);
									$geo_state_rec[$geo_state_idx] = array('name'=>$targ_name, 'node'=>$geo_node);
								}
							}
						}
						$geo_id_this = $geo_idx;
					}

					if ( "__" == $targ_name )
						continue;

					//Merge - FlowStats
					if ( !array_key_exists($targ_name, $date_tv_sum) ) {
						array_push($date_split, array('name'=>$targ_name, 'lo-la'=>$geo_node));
						$date_tv_sum[$targ_name] = array();
					}

					if ( !array_key_exists($stall_tv, $date_tv_sum[$targ_name]) )
						$date_tv_sum[$targ_name][$stall_tv] = $stall_bsz;
					else
						$date_tv_sum[$targ_name][$stall_tv] += $stall_bsz;
				}
			}

			foreach ( $date_split as $d_node ) {
				$d_gmap_name = $d_node['name'];
				ksort($date_tv_sum[$d_gmap_name]);
				$data_tv_slip = array_flip($date_tv_sum[$d_gmap_name]);
				$d_node['stats'] = array();
				foreach($data_tv_slip as $t_node) {
					$geo_up_stats_this = $date_tv_sum[$d_gmap_name][$t_node];
					if ( $geo_up_stats_max < $geo_up_stats_this )
						$geo_up_stats_max = $geo_up_stats_this;
					array_push($d_node['stats'], array($t_node, $geo_up_stats_this));
				}
				array_push($geo_up_overview, $d_node);
				$count = $count + 1;
			}
		}
		unset($client);
		$response['data'] = $geo_up_overview;
		$response['stats_max'] = intval($geo_up_stats_max);
	}

	$response['operation'] = REQ_OPERATION_SUCCESS;
	$response['total'] = intval($count);
	#$response['size'] = $size;
	#$response['offset'] = $offset;

	CloseConn($conn);

	return true;
}

function strstr_after($haystack, $needle, $case_insensitive = false)
{
    $strpos = ($case_insensitive) ? 'stripos' : 'strpos';
    $pos = $strpos($haystack, $needle);
    if (is_int($pos)) {
        return substr($haystack, $pos + strlen($needle));
    }
    return FALSE;
}

function ntohl($str)
{
	$endian = unpack('I', pack('N', $str));
	return $endian[1];
}

function htonl($str)
{
	$endian = unpack('I', pack('N', $str));
	return $endian[1];
}

function nf_query_get_ip_list($ip_addrs)
{
	$ip_list = array();
	
	if ( FALSE == ($nf_netmask=strstr_after($ip_addrs, '/')) ) {
		$ip_base_int = ip2long($ip_addrs);
		array_push($ip_list, ntohl($ip_base_int));
	}
	else if ( $nf_netmask >= 24 && $nf_netmask <= 32 ) {
		$start_ipc = 0;
		/*if (24 == $nf_netmask)	//No x.x.x.0
			$start_ipc = 1;*/

		$nf_netmask = 32 - $nf_netmask;
		$nm_raw = 0xffffffff;
		$nm_raw_rev = 0x0;
		for($i=0; $i<$nf_netmask; $i++) {
			$nm_raw &= ~(0x01<<$i);
			$nm_raw_rev |= (0x01<<$i);
		}

		$ip_base = strstr($ip_addrs, '/', true);
		$ip_base_int = ip2long($ip_base) & $nm_raw;
		if ( 0 == ($ip_base_int & 0xff) )	//ip end with '0', x.x.x.0
			$start_ipc = 1;
		//echo '0x'.$nm_raw_rev.', base '.$ip_base.', int '.$ip_base_int.'<br>';
		for($i=$start_ipc; $i<=$nm_raw_rev; $i++) {
			array_push($ip_list, ntohl($ip_base_int+$i));
		}
	}

	return $ip_list;
}

function nf_query_get_port_list($ports_str)
{
	$port_list = explode(',', $ports_str);//array();
/*
	if ( FALSE != ($port=strstr($ports_str, ',', true)) ) {
		array_push($port_list, $port);
	}

	print_r($port_list);
	echo "port list: "."<br>";
*/
	return $port_list;
}

function nf_query(&$response, $nfq_data)
{
	$count = 0;
	$div_port = FALSE;

	$conn = CreateConn();
	if (!$conn)
	{
		$response['operation'] = REQ_INTERNAL_ERROR;
		return false;
	}
	CharSet($conn, "utf8");
	SelectDB($conn, MYSQL_DB);

	//Get IP List
	$ip_list_src = NULL;
	$ip_list_dst = NULL;
	if ( array_key_exists('s_ip', $nfq_data) && !array_key_exists('d_ip', $nfq_data) )
	{
		$ip_list_src = nf_query_get_ip_list($nfq_data['s_ip']);
		$ip_list_dst = array();
		array_push($ip_list_dst, 0);
	}
	else if ( !array_key_exists('s_ip', $nfq_data) && array_key_exists('d_ip', $nfq_data) )
	{
		$ip_list_dst = nf_query_get_ip_list($nfq_data['d_ip']);
		$ip_list_src = array();
		array_push($ip_list_src, 0);
	}
	else if ( array_key_exists('s_ip', $nfq_data) && array_key_exists('d_ip', $nfq_data) )
	{
		$ip_list_src = nf_query_get_ip_list($nfq_data['s_ip']);
		$ip_list_dst = nf_query_get_ip_list($nfq_data['d_ip']);
	}
	else
	{
			   		/*$response['total'] = 0;
					CloseConn($conn);
					return false;*/
		$response['operation'] = REQ_INTERNAL_ERROR;
		CloseConn($conn);
		return false;
	}

	//Get Port List
	$port_vec = 0;
	$port_lists = NULL;
	if ( array_key_exists('s_port', $nfq_data) ) {
		$port_lists = nf_query_get_port_list($nfq_data['s_port']);
		$port_vec = 1;
	}
	else if ( array_key_exists('d_port', $nfq_data) ) {
		$port_lists = nf_query_get_port_list($nfq_data['d_port']);
		$port_vec = 2;
	}

	//Retrieve Data
	$ip_target = 0;
	foreach ($ip_list_src as $ip_src) {
		foreach ($ip_list_dst as $ip_dst) {
			if ( 0 == $ip_src && 0 == $ip_dst ) {
				break;
			}

			if ( 0 == $port_vec ) {			//No Port Appointed
				if ( 0 == $ip_dst ) {
					$sql_rsv = 'SELECT SUM(cnt) as cnt_s, SUM(bsize) as bsz_s FROM nfiptet_stats WHERE ip_dst='.$ip_src;
					$sql_snd = 'SELECT SUM(cnt) as cnt_s, SUM(bsize) as bsz_s FROM nfiptet_stats WHERE ip_src='.$ip_src;
				}
				else if ( 0 == $ip_src ) {
					$sql_rsv = 'SELECT SUM(cnt) as cnt_s, SUM(bsize) as bsz_s FROM nfiptet_stats WHERE ip_src='.$ip_dst;
					$sql_snd = 'SELECT SUM(cnt) as cnt_s, SUM(bsize) as bsz_s FROM nfiptet_stats WHERE ip_dst='.$ip_dst;
				}
				else {
					$sql_rsv = 'SELECT SUM(cnt) as cnt_s, SUM(bsize) as bsz_s FROM nfiptet_stats WHERE ip_dst='.$ip_src.' AND ip_src='.$ip_dst;
					$sql_snd = 'SELECT SUM(cnt) as cnt_s, SUM(bsize) as bsz_s FROM nfiptet_stats WHERE ip_src='.$ip_src.' AND ip_dst='.$ip_dst;
				}

				$cnt_rsv = '0';
				$bsz_rsv = '0';
				$cnt_snd = '0';
				$bsz_snd = '0';

				//Count Receive
				//echo $sql_rsv."<br>";
				$ipt_res = ExecuteSQL($conn, $sql_rsv);
				if (!$ipt_res || GetNumOfResultRows($ipt_res) == 0)
					continue;
				$ipt_row_rsv=FetchAssocArray($ipt_res);

				//Count Send
				//echo $sql_snd."<br>";
				$ipt_res = ExecuteSQL($conn, $sql_snd);
				if (!$ipt_res || GetNumOfResultRows($ipt_res) == 0)
					continue;
				$ipt_row_snd=FetchAssocArray($ipt_res);

				if ( (NULL == $ipt_row_rsv['cnt_s'] || NULL == $ipt_row_rsv['bsz_s'])
					&& (NULL == $ipt_row_snd['cnt_s'] || NULL == $ipt_row_snd['bsz_s']) )
					continue;
				if ( NULL != $ipt_row_rsv['cnt_s'] || NULL != $ipt_row_rsv['bsz_s'] ) {
					$cnt_rsv = $ipt_row_rsv['cnt_s'];
					$bsz_rsv = $ipt_row_rsv['bsz_s'];
				}
				if ( NULL != $ipt_row_snd['cnt_s'] || NULL != $ipt_row_snd['bsz_s'] ) {
					$cnt_snd = $ipt_row_snd['cnt_s'];
					$bsz_snd = $ipt_row_snd['bsz_s'];
				}

				if ( 0 == $ip_src )
					array_push($response['data'],
						/*array('', long2ip(htonl($ip_dst)), '', $cnt_rsv, $bsz_rsv, $cnt_snd, $bsz_snd));*/
						array('', long2ip(htonl($ip_dst)), $bsz_snd, $bsz_rsv, (string)($bsz_rsv+$bsz_snd)));
				else if ( 0 == $ip_dst )
					array_push($response['data'],
						/*array(long2ip(htonl($ip_src)), '', '', $cnt_rsv, $bsz_rsv, $cnt_snd, $bsz_snd));*/
						array(long2ip(htonl($ip_src)), '', $bsz_snd, $bsz_rsv, (string)($bsz_rsv+$bsz_snd)));
				else
					array_push($response['data'],
						/*array(long2ip(htonl($ip_src)), long2ip(htonl($ip_dst)), '', $cnt_rsv, $bsz_rsv, $cnt_snd, $bsz_snd));*/
						array(long2ip(htonl($ip_src)), long2ip(htonl($ip_dst)), $bsz_snd, $bsz_rsv, (string)($bsz_rsv+$bsz_snd)));
				$count++;
			}
			else {				//Port Specified
				foreach ($port_lists as $port) {
					if ( 0 == $ip_dst ) {		//Source IP
						$sql_rsv_v1 = 'SELECT SUM(cnt_vec_in) as cnt_s, SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats WHERE ip_dst='.$ip_src.' AND port='.$port;
						$sql_rsv_v2 = 'SELECT SUM(cnt_vec_out) as cnt_s, SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats WHERE ip_dst='.$ip_src.' AND port='.$port;
						$sql_snd_v1 = 'SELECT SUM(cnt_vec_out) as cnt_s, SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats WHERE ip_src='.$ip_src.' AND port='.$port;
						$sql_snd_v2 = 'SELECT SUM(cnt_vec_in) as cnt_s, SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats WHERE ip_src='.$ip_src.' AND port='.$port;
					}
					else if ( 0 == $ip_src ) {	//Dest IP
						$sql_rsv_v1 = 'SELECT SUM(cnt_vec_in) as cnt_s, SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats WHERE ip_src='.$ip_dst.' AND port='.$port;
						$sql_rsv_v2 = 'SELECT SUM(cnt_vec_out) as cnt_s, SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats WHERE ip_src='.$ip_dst.' AND port='.$port;
						$sql_snd_v1 = 'SELECT SUM(cnt_vec_out) as cnt_s, SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats WHERE ip_dst='.$ip_dst.' AND port='.$port;
						$sql_snd_v2 = 'SELECT SUM(cnt_vec_in) as cnt_s, SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats WHERE ip_dst='.$ip_dst.' AND port='.$port;
					}
					else {				//Source IP and Dest IP
						$sql_rsv_v1 = 'SELECT SUM(cnt_vec_in) as cnt_s, SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats ';
						$sql_rsv_v1 = $sql_rsv_v1.'WHERE ip_dst='.$ip_src.' AND ip_src='.$ip_dst.' AND port='.$port;
						$sql_rsv_v2 = 'SELECT SUM(cnt_vec_out) as cnt_s, SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats ';
						$sql_rsv_v2 = $sql_rsv_v2.'WHERE ip_dst='.$ip_src.' AND ip_src='.$ip_dst.' AND port='.$port;
						$sql_snd_v1 = 'SELECT SUM(cnt_vec_out) as cnt_s, SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats ';
						$sql_snd_v1 = $sql_snd_v1.'WHERE ip_src='.$ip_src.' AND ip_dst='.$ip_dst.' AND port='.$port;
						$sql_snd_v2 = 'SELECT SUM(cnt_vec_in) as cnt_s, SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats ';
						$sql_snd_v2 = $sql_snd_v2.'WHERE ip_src='.$ip_src.' AND ip_dst='.$ip_dst.' AND port='.$port;
					}

					$cnt_rsv = 0;
					$bsz_rsv = 0;
					$cnt_snd = 0;
					$bsz_snd = 0;

					//forward direction
					/*$ipt_res = ExecuteSQL($conn, $sql_rsv);
					if (!$ipt_res || GetNumOfResultRows($ipt_res) == 0)
						continue;

					while ($ipt_row = FetchAssocArray($ipt_res)) {
						if ( NULL == $ipt_row['id'] )
							break;*/

						if ( 1 == $port_vec ) {
							//$sql = 'SELECT SUM(cnt_vec_in) as cnt_s,SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats WHERE ipt_id='.$ipt_row['id'].' AND port='.$port;
							$ipt_port_res = ExecuteSQL($conn, $sql_rsv_v1);
							if (!$ipt_port_res || GetNumOfResultRows($ipt_port_res) == 0)
								continue;
							$ipt_port_row_rsv=FetchAssocArray($ipt_port_res);

							//$sql = 'SELECT SUM(cnt_vec_out) as cnt_s,SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats WHERE ipt_id='.$ipt_row['id'].' AND port='.$port;
							$ipt_port_res = ExecuteSQL($conn, $sql_snd_v1);
							if (!$ipt_port_res || GetNumOfResultRows($ipt_port_res) == 0)
								continue;
							$ipt_port_row_snd=FetchAssocArray($ipt_port_res);
						}
						else {
							//$sql = 'SELECT SUM(cnt_vec_out) as cnt_s,SUM(bsz_vec_out) as bsz_s FROM nfprotp_stats WHERE ipt_id='.$ipt_row['id'].' AND port='.$port;
							$ipt_port_res = ExecuteSQL($conn, $sql_rsv_v2);
							if (!$ipt_port_res || GetNumOfResultRows($ipt_port_res) == 0)
								continue;
							$ipt_port_row_rsv=FetchAssocArray($ipt_port_res);

							//$sql = 'SELECT SUM(cnt_vec_in) as cnt_s,SUM(bsz_vec_in) as bsz_s FROM nfprotp_stats WHERE ipt_id='.$ipt_row['id'].' AND port='.$port;
							$ipt_port_res = ExecuteSQL($conn, $sql_snd_v2);
							if (!$ipt_port_res || GetNumOfResultRows($ipt_port_res) == 0)
								continue;
							$ipt_port_row_snd=FetchAssocArray($ipt_port_res);
						}

						if ( (NULL == $ipt_port_row_rsv['cnt_s'] || NULL == $ipt_port_row_rsv['bsz_s'])
							&& (NULL == $ipt_port_row_snd['cnt_s'] || NULL == $ipt_port_row_snd['bsz_s']) )
							continue;
						$cnt_rsv += $ipt_port_row_rsv['cnt_s'];
						$bsz_rsv += $ipt_port_row_rsv['bsz_s'];
						$cnt_snd += $ipt_port_row_snd['cnt_s'];
						$bsz_snd += $ipt_port_row_snd['bsz_s'];
					//}

					//forward direction
					/*$ipt_res = ExecuteSQL($conn, $sql_snd);
					if (!$ipt_res || GetNumOfResultRows($ipt_res) == 0)
						continue;

					while ($ipt_row = FetchAssocArray($ipt_res)) {
						if ( NULL == $ipt_row['id'] )
							break;*/
					//}

					if ( 0 == $ip_src )
						array_push($response['data'],
							array('', long2ip(htonl($ip_dst)), $port, $cnt_rsv, $bsz_rsv, $cnt_snd, $bsz_snd));
					else if ( 0 == $ip_dst )
						array_push($response['data'],
							array(long2ip(htonl($ip_src)), '', $port, $cnt_rsv, $bsz_rsv, $cnt_snd, $bsz_snd));
					else
						array_push($response['data'],
							array(long2ip(htonl($ip_src)), long2ip(htonl($ip_dst)), $port, $cnt_rsv, $bsz_rsv, $cnt_snd, $bsz_snd));
					$count++;
				}
			}
		}
	}

	$response['operation'] = REQ_OPERATION_SUCCESS;
	$response['total'] = intval($count);
	#$response['size'] = $size;
	#$response['offset'] = $offset;

	CloseConn($conn);

	return true;
}


?>
