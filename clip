wireless.radio0=wifi-device                                                     
wireless.radio0.type='mac80211'                                                 
wireless.radio0.channel='11'                                                    
wireless.radio0.hwmode='11g'                                                    
wireless.radio0.path='10180000.wmac'                                            
wireless.radio0.htmode='HT20'                                                   
wireless.@wifi-iface[0]=wifi-iface                                              
wireless.@wifi-iface[0].device='radio0'                                         
wireless.@wifi-iface[0].network='lan'                                           
wireless.@wifi-iface[0].mode='ap'                                               
wireless.@wifi-iface[0].ssid='OpenWrt'                                          
wireless.@wifi-iface[0].encryption='none'

wget --mirror -p --convert-links -P ./ https://wiki.strongswan.org/projects/strongswan/wiki/IntroductionTostrongSwan

################################
#1.先生成根证书
ipsec pki --gen --outform pem > caKey.pem
ipsec pki --self --in caKey.pem --dn "C=CN, O=strongSwan, CN=strongSwan CA" --ca --outform pem > caCert.pem

#2.然后是服务器端的证书
ipsec pki --gen --outform pem > serverKey.pem
ipsec pki --pub --in serverKey.pem | ipsec pki --issue --cacert caCert.pem --cakey caKey.pem --dn "C=CN, O=strongSwan, CN=192.168.0.103" --san="192.168.0.103" --flag serverAuth --flag ikeIntermediate --outform pem > serverCert.pem

#3.客户端的证书
ipsec pki --gen --outform pem > clientKey.pem
ipsec pki --pub --in clientKey.pem | ipsec pki --issue --cacert caCert.pem --cakey caKey.pem --dn "C=CN, O=strongSwan, CN=client" --outform pem > clientCert.pem

################################
cd /usr/lib/opkg/info
for i in `ls *.control`
do
  echo `grep Size $i | cut -f 2 -d ":"` `echo $i | cut -f 1 -d "."`
done

If you want the output to be sorted, you can run it through sort:

./opkg_sizes | sort -n

##################################



China Unicom WCDMA setup:
http://natisbad.org/E4300/Dell_Wireless_5530_AT_cmd_ref.html
http://www.thinkwiki.org/wiki/Ericsson_F3507g_Mobile_Broadband_Module

APN: 3gnet 
Homepage: http://www.wo.com.cn
WAP Gateway: 10.0.0.172
WAP Gateway Port: 80 for WAP2.0; 9201 for WAP1.2
User Name:
Password: 
* user name and password are both empty

MMS:
Relay server URL: http://mmsc.myuni.com.cn

Setting for your laptop to access internet via China Unicom WCDMA:

1. add your mobile phone or data card as a modem to your laptop
2. Set up modem: extra settings: AT+CGDCONT=1,"IP","3gnet"; +cgeqreq=1,3,64,64
3. enter *99# as dial number 
4. user name and password are all empty 
5. It's OK and you can connect now


network ->> routing and redirection ->> vrrpd

mount device mount-point -o uid=foo -o gid=foo

du -sk * | sort -nr | head -10

Universal Serial Bus Communication Device Class Abstract Control Model (USB CDC ACM) 

https://forum.openwrt.org/viewtopic.php?id=55090

++tftp
++minicom/cu
--lftp

#missed in barriarbreaker
CONFIG_USES_INITRAMFS=y
CONFIG_SIGNED_PACKAGES=y
CONFIG_PKG_CC_STACKPROTECTOR_NONE=y
CONFIG_KERNEL_CC_STACKPROTECTOR_NONE=y
CONFIG_PKG_FORTIFY_SOURCE_NONE=y
CONFIG_PKG_RELRO_NONE=y
CONFIG_FEED_targets=y ->> 3.10: CONFIG_FEED_oldpackages=y

++CONFIG_BUSYBOX_DEFAULT_FEATURE_TOUCH_SUSV3=y
CONFIG_BUSYBOX_DEFAULT_FEATURE_VI_UNDO_QUEUE_MAX=0
CONFIG_BUSYBOX_DEFAULT_LAST_ID=0
++CONFIG_BUSYBOX_DEFAULT_FEATURE_SH_NOFORK=y

CONFIG_PACKAGE_usign=y

CONFIG_PACKAGE_kmod-nf-conntrack=y
CONFIG_PACKAGE_kmod-nf-conntrack6=y
CONFIG_PACKAGE_kmod-nf-ipt=y
CONFIG_PACKAGE_kmod-nf-ipt6=y
CONFIG_PACKAGE_kmod-nf-nat=y
CONFIG_PACKAGE_kmod-nf-nathelper=y


CONFIG_PACKAGE_kmod-usb-serial-dmx_usb_module=y
CONFIG_PACKAGE_kmod-usb-serial-garmin=y
CONFIG_PACKAGE_kmod-usb-serial-simple=y

CONFIG_PACKAGE_luci-lib-ip=y

CONFIG_POSTFIX_TLS=y
CONFIG_POSTFIX_SASL=y
CONFIG_POSTFIX_LDAP=y
CONFIG_POSTFIX_CDB=y

CONFIG_PACKAGE_umbim=y

CONFIG_PACKAGE_wwan=y

#missed end



uci set wireless.@wifi-device[0].disabled=0
uci set wireless.@wifi-iface[0].ssid=elins
uci set wireless.@wifi-iface[0].encryption=psk2
uci set wireless.@wifi-iface[0].key=12345687

-cueshell-3.00$ cleartool setview pengghon_view_cli_drop2a_dev_comp
newgrp lct__
umask 0002
cd /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src/make/
./hotfixlc.sh
+ OBJ=ci
+ NPUSTYLE=mpc82xx
+ OBJ_PATH=../build/debug/mpc82xx/opt/xf/bin
+ '[' cizz = clizz ']'
+ rm ../build/debug/mpc82xx/opt/xf/bin/ci
+ clearmake -C gnu ARCH=mpc82xx ci

makeview.bat -rel tn5_bns_app -feat tn5_bns_app -br hp25281 -unix

/opt/montavista/pro/devkit/ppc/82xx/bin/ppc_82xx-strip ../build/debug/mpc82xx/opt/xf/bin/eps
/opt/montavista5/montavista/pro/devkit/ppc/83xx_nfp/bin/ppc_83xx_nfp-strip  ../build/debug/mpc83xx_nfp/opt/xf/bin/eps

/opt/montavista/pro/devkit/ppc/82xx/bin/ppc_82xx-gdb ../build/debug/mpc82xx/opt/xf/bin/ci
/opt/montavista5/montavista/pro/devkit/ppc/83xx_nfp/bin/ppc_83xx_nfp-gdb ../build/debug/mpc83xx_nfp/opt/xf/bin/ci

ITHub:

cd /vobs/ERI_RL_deliverables/ads/cxp9101133_10_CN510R2/debug

up bin:
./upload_lctp.sh ../build/debug/mpc82xx/opt/xf/lib/libch.so libch.so
./upload_lctp.sh ../obj/ans/debug/mpc82xx/opt/xf/bin/nans nans_zz

http://www.aqicn.info/city/chengdu/cn/

devtool:
/app/montavista/3.1/LMWP2/montavista/pro/devkit/ppc/82xx/bin/ppc_82xx-strip
/app/montavista/5.0/LMWP2/montavista/pro/devkit/ppc/83xx_nfp/bin/ppc_83xx_nfp-strip

/app/montavista/3.1/LMWP2/montavista/pro/devkit/ppc/82xx/bin/ppc_82xx-gdb
/app/montavista/5.0/LMWP2/montavista/pro/devkit/ppc/83xx_nfp/bin/ppc_83xx_nfp-gdb





admin
Arg*ona?uT+1
invertboot

view_user:      @EricssoNus1
oper_user:      @EricssoNus2
control_user: @EricssoNus3
admin_user:   @EricssoNus4
cliunlock:Eri#css$oN@2

#NP BOOT
cd /vobs/product/dxc_ip/xf_bns_src/boots_pbists/cxc1731963_2_cn510_r2_boot/make

#NANS
etc_attach

CXCR102045_1-R11A28

newgrp lct__
umask 0002
cd /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/caxr102078_1_NPU_ANS/make
clearmake -C gnu ARCH=mpc82xx ans
clearmake -C gnu ARCH=mpc83xx_nfp all

/opt/montavista/pro/devkit/ppc/82xx/bin/ppc_82xx-strip ../obj/ans/debug/mpc82xx/opt/xf/bin/nans
/app/montavista/3.1/LMWP2/montavista/

makeview.bat -rel tn5_nans -feat tn5_nans -br hp25281 -unix
makeview.bat -rel tn5_nans -feat tn5_nans -br hp25281 -unix

Jenkins__http://eselnlx1097.mo.sw.ericsson.se:8080/view/Internal%20SBL's/view/CN%20510/job/iSBLcn510-R1AT/

#NERD boot
flash 10.0.1.5:peng_cfe.flash flash0.boot

        //Reg 28's bit 4:3 shows the Speed status
        ctrl = mii_read(sc, i, 28);
        ctrl &= 0x18;
        if(0x10 == ctrl){	//1000BASE-T/1000BASE-X
        xprintf("Probe, PHY %d link speed 1000BASE-T.\n", i);
            mii_write(sc, i, 29, 0x01ae);
            mii_write(sc, i, 30, 0x0505);
        }
        else if(0x08 == ctrl){	//100BASE-TX/100BASE-FX
        xprintf("Probe, PHY %d link speed 100BASE-T.\n", i);
            mii_write(sc, i, 29, 0x01ae);
            mii_write(sc, i, 30, 0x0505);
        }
        else{
        xprintf("Probe, PHY %d link speed Unknown.\n", i);
            mii_write(sc, i, 29, 0x01ae);
            mii_write(sc, i, 30, 0x0505);
        }

#NP...............................................................***********#

ls /etc/rc.d/rc3.d/S*

#spi-lib-test
clearmake -V -C gnu test-spi-lib ARCH=mpc83xx_nfp FLAVOR=release
/vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src/platform/eqm/spi-lib/test/


#NERD...............................................................***********#

cd /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd/cxcr102044_1_nerd_ads/make
clearmake -C gnu all (FLAVOR=release)

..............

dst_dir=/etc/xinetd.d
src_dir=/opt/xf/etc
cp ${src_dir}/tftp ${dst_dir}/tftp
/etc/init.d/xinetd.sh start
/sbin/ifconfig eth0:0 169.254.1.1 netmask 255.255.0.0
ifconfig eth0 10.0.1.22 netmask 255.255.255.0 up
ifconfig eth0:1 169.254.5.1 netmask 255.255.255.0

#MP:
tcpdump -i eth0 -X port 15000
tftp -g <ip_address> -r <filename>
*check mp sw version:
md b 0x100000 20	//bank1
md b 0x2000000 20	//bank2
*switch bank:
# su_active_bank
su_active_bank r	//read active bank
su_active_bank w b2/b1 // to swap bank


#NP:
iptables -I port_mgmt -s 169.254.5.0/24 -p udp --dport 13292 -j ACCEPT

#debug
echo f > /proc/driver/tnipc_dp/debug
echo f > /proc/driver/tnipc/debug
kill -SIGUSR1 1316      (pid of ipr)

#serial cable through minicom:
useradd cnp_217
passwd cnp_217
ln –s ttyUSB31 cnp_217
chgrp cnp_217 ttyUSB31
touch minicomrc.dfcnp_217
redhat: udevinfo -a -p /sys/class/tty/ttyUSB31
ubuntu: udevadm info -q path -n /dev/ttyUSB31
vi /etc/udev/rules.d/50-udev.rules

#user
finger cnp_190	//user info
usermod -s /bin/bash cnp_190	//set default shell
usermod -d /home/user_a cnp_190	//set default home dir
rsync -a /sourse_dir /destin_dir
#end

#nerd boot
flash 10.0.1.5:2_19007-cxc1731618_2.flash flash0.boot
#

##SPI GA address mapping, bdmod-io_if.c
/* Map from 'slot' to 'ga' */
static unsigned char npu_slot_map_amm6p[] =
{0, 1, 6, 7, 8, 9, 10, 11};
static unsigned char npu_slot_map_amm6p_c[] =
{0, 1, 6, 7, 8, 9, 10, 11, 12};
static unsigned char npu_slot_map_amm6p_d[] =
{0, 1, 6, 7, 8, 9, 10, 11, 12, 13};
static unsigned char npu_slot_map_amm2p[] =
{10, 11, 3, 2};
static unsigned char npu_slot_map_amm2p_b[] =
{12, 11, 7, 6};
static unsigned char npu_slot_map_cn510_r2_p1[] =
{6, 26, 28, 12};
static unsigned char npu_slot_map_cn510_r2_p2[] =
{11, 11, 7, 6};
static unsigned char npu_slot_map_atu[] =
{10, 11, 2}; /* slot 0 not used in ATU */
##

This sprint:
a,EEPROM Data on Slave
        Hide EEPROM from Modem (serial no etc)
        Fetch EEPROM data from NP slave
b,LED handling of 1+1;LED/Fault cases of modem, how to handle LEDs?
c,Temp and power handling 1+1
d,Restart of modem


mv /var/fs/hotfix/tftpboot /var/fs/hotfix/tftpboot_zz
cp /opt/xf/etc/tftp /etc/xinetd.d/tftp
/etc/init.d/xinetd.sh start

mv /var/fs/hotfix/tftpboot_zz /var/fs/hotfix/tftpboot
cp /opt/xf/etc/tftp.hotfix /etc/xinetd.d/tftp
/etc/init.d/xinetd.sh start

in MLCraft, management tree -> Switch Port X->Configure->Configure Layer 2 Control Protocol->
Customer Bridge.....(BPDU) for Customed mode 802.1Q and Provider Bridge...(PBPDU) for provider mode 802.1AD
discard or peer decides whether packets to reserved mac address should be discarded or accepted
#ifdef EHSL_USE_RX_STP

/* Well known mac addresses */

static const bcm_mac_t sBpduDmac = {0x01, 0x80, 0xC2, 0x00, 0x00, 0x00};

static const bcm_mac_t sProviderBpduDmac = {0x01, 0x80, 0xC2, 0x00, 0x00, 0x08};

So after a warm restart see if this setting takes effect.  Try to set up RSTP towards another node or maybe N2X


/sbin/ifconfig eth0:0 169.254.1.1 netmask 255.255.0.0
ifconfig eth0 10.41.16.197 netmask 255.255.0.0 up
ifconfig eth0 10.80.41.190 netmask 255.255.0.0 up
ifconfig eth0:1 169.254.5.1 netmask 255.255.255.0

ifconfig eth0:2 10.80.41.186 netmask 255.255.0.0 up
ifconfig eth0:2 10.80.41.213 netmask 255.255.0.0 up
ifconfig eth0:2 10.80.41.194 netmask 255.255.0.0 up

ifconfig eth0:1 down

/var/fs/hotfix/tt.sh
copy ftp asd /tn_system_release/ml_tn_software/CXP9010021_1/CXP9010021_1_MINI-LINK_TN_5.1_R25AL177 flash nowait

##mp ads
ifconfig eth0 169.254.5.2 netmask 255.255.255.0 up
ifconfig eth0:0 169.254.1.1 netmask 255.255.255.0
ifconfig eth0:1 10.41.16.24 netmask 255.255.255.0

tftp -g 10.0.1.5 -r CXP9011133_10_bank_R1A12.bin
copyToFLASH CXP9011133_10_bank_R1A12.bin  0x100000
copyToFLASH CXP9011133_10_bank_R1A12.bin  0x2000000

##

BCM:
port ge5 en=yes stp=forw
egr set p=ge2 m=0 pb=ge5,ge12,cpu
egr set p=ge5 m=0 pb=ge2,ge12
egr set p=ge12 m=0 pb=ge2,ge5,cpu
vlan add 4095 PortBitMap=ge2,ge5,ge12,cpu UntagBitMap=ge2,ge5,ge12,cpu
pv set ge2,ge5,ge12,cpu 4095

mkdir /var/fs
mkdir /var/fs/hotfix
mount -t jffs2 /dev/mtdblock3 /var/fs/hotfix/
(mtd -e -3)

./spi-lib-test -t 25

ifconfig eth0:1 down
ifconfig eth0:2 10.80.41.173 netmask 255.255.0.0 up
ifconfig eth0:2 10.80.41.189 netmask 255.255.0.0 up
/sbin/ifconfig eth0:1 169.254.5.1 netmask 255.255.255.0
/sbin/ifconfig eth0:0 169.254.1.1 netmask 255.255.0.0
mkdir /var/su
mount -t tmpfs -o size=40m tmpfs /var/su
cd /var/su
mkdir /var/fs/hotfix
mount -t jffs2 /dev/mtdblock3 /var/fs/hotfix/
cp /var/fs/hotfix/ret_ftp.sh .


#######################Linux shell

mtd erase /dev/mtd2
mount -t jffs2 /dev/mtdblock2 /tmp/fs/conf_rw/

cat /sys/class/ieee80211/phy0/macaddress

find . -type f -print |xargs grep "mtd_partition"
find -name "*.pem" -type f -exec ls -l {} \;
#######################Linux shell end

bcm
port ge4 en=n
port ge7 en=yes stp=forw
egr set p=ge2 m=0 pb=ge7,cpu,ge4,ge12
egr set p=ge7 m=0 pb=ge2

port ge12 en=yes stp=forw
egr set p=ge2 m=0 pb=ge12,cpu,ge4,ge12
egr set p=ge12 m=0 pb=ge2

port ge25 en=yes stp=forw
egr set p=ge2 m=0 pb=ge25,cpu,ge4,ge7,ge12
egr set p=ge25 m=0 pb=ge2

ftp server name asd address 10.80.41.245 servertype FTP
copy ftp asd /tn_system_release/ml_tn_software/CXP9010021_1/CXP9010021_1_MINI-LINK_TN_5.3FP_LH_1.5FP_R30A181 flash nowait
copy ftp asd /tn_system_release/ml_tn_software/CXP9010021_1/CXP9010021_1_MINI-LINK_TN_6.0_LH_2.0_R32AU21 flash
copy ftp asd /tn_system_release/ml_tn_software/CXP9020705_1/CXP9020705_1_MINI-LINK_CN510_2.4_R6A135 flash
copy ftp asd /tn_system_release/ml_tn_software/CXP9020705_31/CXP9020705_31_MINI-LINK_CN510_R2.1_R1B10 flash
copy ftp asd /tn_system_release/ml_tn_software/CXP9020705_31/CXP9020705_31_MINI-LINK_CN510_R2.1_R1C065 flash
copy ftp asd /tn_system_release/ml_tn_software/CXP9020705_31/CXP9020705_31_MINI-LINK_CN510_R2.2_R3A365 flash
copy ftp asd /tn_system_release/ml_tn_software/CXP9010021_3/CXP9010021_3_MINI-LINK_TN_5.1.1_LH_1.3.0_R26AU51 flash

Credit card code: 4add71

.P8ranCs.S0r  for CLIUnlock
V4kt0Ztass%66x  for Linux access

fp entry disable 1999
fp show entry 1999
./make.sh --target bcm562xx --rstate R17B28

ifconfig eth0:1 10.80.41.171 netmask 255.255.255.0
route add default gw 10.80.41.1

ip route 0.0.0.0/0 10.80.41.1
ip address 10.80.41.171 255.255.255.0

remote pc in skelleftea:
172.19.82.130
cn510, cn_510123

##>
update the NERD sw in flash by running “nerdlm -u”
##

>>>
1. >lftp sftp://<your account>@132.196.14.238
2. >pget -c -n <thread number> <filename>
>>>

////
To pretty much completely disable SSH timeouts, simply adjust the following directives in /etc/ssh/sshd_config:
TCPKeepAlive yes
ClientAliveInterval 30
ClientAliveCountMax 99999
////

####clearcase####
/cc/bin/makeview-mw
cleartool mkbrtype -nc <branch name>@NERD: /vobs/product/dxc_ip/tn_ethernet_bridge_src
                                    @BNS:  /vobs/product/dxc_ip/xf_bns_src
@delivery: /vobs/tn_sbl_delivery

cleartool rmtype -rmall brtype:<branch name>@NERD: /vobs/product/dxc_ip/tn_ethernet_bridge_src
                                            @BNS:  /vobs/product/dxc_ip/xf_bns_src/

####ct###########

10:47Rao Donglin__https://hubseln.ericsson.se/Citrix/XenApp/auth/login.aspx
10:55Rao Donglin__https://partnerlogin.ericsson.se/start.asp


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

##MMU3A Prod.No
Syntax:
inv_cn810 <NPU rev> <NPU serial> <backplane rev> <backplane serial> [revert]
Example:
> enable
> cliunlock
> config
> inv_cn810 R1A A23108Y16Y R1B TY12704506

>
Unit	Prod. number(CN 810)	Prod. number(TN)
Backplane	ROJ 208 157/1	ROJR 609 005/1
AMM	BFD 599 035/1	BFD 599 031/2
NPU	ROJ 208 154/1	ROJR 211 006/2
LTU	ROJ 208 156/1	ROJR 211 005/1
MMU	ROJ 208 155/1	ROJ 208 1311/1
>
The TH module has been updated to add a check for “MMU CN 810” product number ROJ 208 155/1 to the existing check for “MMU3 A” product number ROJ 208 1311/. 
##

###wait slave nerd erase flash finish

###

##>>
To get a list of the Remote Sessions in the command window (Get the session Id of user to kick out):
qwinsta /server:SERVERIP

To disconnect the remote session:
rwinsta /server:SERVERIP SESSIONID
##


##compare label
ct find /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd -version "lbtype(CXCR102044_1-R14AP17) && ! lbtype(CXCR102044_1-R14AP16)" -print
##
/lab/minilink/ML_ftp/DELIVERABLES/SBL/R26B
##

#66006
if(NODE_OPERATIONAL == node_state){

soam logmask 991
mv /var/fs/conf_rw/current/1151_0_EPS.conf /var/fs/conf_rw/current/1151_0_EPS.conf_zz
cat /var/log/local.log |grep cold
ping -t 169.254.1.1

BnfMsgStucfgNoverChecksum
(sigHdrBnfCksum, tMsgMd5)

AU36
xbinxii
Rederxi03

regedit /e "%userprofile%\desktop\putty-sessions.reg" HKEY_CURRENT_USER\Software\SimonTatham\PuTTY\Sessions

108  12:51   ct lsco -me -cview -avobs
   109  12:52   cat ../config/bns_app_rstate.txt
   110  12:55   ct lsp | xargs rm -rf
   111  12:55   ./make_release.sh deliver
   
curiosity;
generosity;
self-esteem;
unity;
passion;
meritocracy;
   

ct mkbrtype -nc ln_tn51_nans_wp_cn_roleselection_llv_dev_xxicyan@/vobs/product/dxc_ip/xf_bns_src

cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns -version 'version(.../xrs3_vlan_ranges_llv_dev_xweiwch/LATEST)' -print
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns -version 'brtype(ln_tn5_1_lsv)&&created_by(xhonpen)' -print

#remove find file: #find . -name 'CXP*R29[A-Z][A-Z]*' -exec rm -f {} \;

One more information:

The new added code(problemed one) is just for one request message from PADS to Slave nerd, and one response message from Slave nerd to PADS, for Open GE4 Issue.

The most quick way to solve this problem is, stop the request message just at the beginning of tnipc_tcp connected, which is the base of all busyness between Master and Slave.

But if we do like this, we need to remind the coming development, do not use that functional module when normal business is running.

BRs, Peng

log trace:
debug snmp agis trace
debug snmp alarm trace
debug rl aim highavailability
debug rl tna save-current-state 3 all

ADPATIVE error:
1, SYS:../platform/cmo/cm/src/cli-imm.c(2154)(FLASH:WARM): AIM/IMM 3 SM   failed HA inquiry for the 4 time (No reply)

port ge25 en=yes stp=forw
egr set p=ge2 m=0 pb=cpu,ge25
egr set p=ge25 m=0 pb=ge2

port ge4 an=false sp=1000 fd=true

BUG: scheduling with irqs disabled: softirq-tasklet/0xffffffff/8


tx 10 txunit=0 pbm=ge4

iptables -I INPUT 1 -p tcp -s 169.254.5.10 --dport 13292 -j DROP

#######################################################
2013 sprint, TO DO:
a, 2nd IfHdlrP in the same slot???

#get mac
int ipr_get_mac(void)
{
    int s;
    struct ifreq buffer;
    char buf[20];

    s = socket(PF_INET, SOCK_DGRAM, 0);

    memset(&buffer, 0x00, sizeof(buffer));

    strcpy(buffer.ifr_name, "eth0");

    ioctl(s, SIOCGIFHWADDR, &buffer);

    close(s);

    for( s = 0; s < 6; s++ )
    {
    sprintf(buf+s*3, "%.2X:", (unsigned char)buffer.ifr_hwaddr.sa_data[s]);
    }

    aprint(SYSLOG, NOOP, "ipf_get_mac: %s\n", buf);
    return 0;
}

#modem pbist
egr set p=ge7 pb=ge2,ge12 m=0
egr set p=ge12 pb=cpu,ge2,ge4,ge7 m=0

#np hack upgrade
1.	mount /var/su as ramfs (mkdir /var/su)
mount -t tmpfs -o size=40m tmpfs /var/su
2.	ftp the NPU loadmodule to that folder(/var/su)
3.	use "upgrade /dev/mtdblock2 <filename" 
upgrade /dev/mtdblock2 < /var/su/CXP9020510_2_R25AL106
4.	log on to cli, cliunlock and run invertboot to switch bank, and code restart the node.


http://sl.se/en/Visitor/Tickets/Visitor-tickets/, one card: 10804404

port ge3 an=n lb=PHY
port ge4 an=n lb=PHY

/opt/xf/etc/init.d/pnpu_services1.sh start
/var/fs/hotfix/tnipc_dp.sh start
/opt/xf/etc/init.d/ipr.sh start
/opt/xf/etc/init.d/pads.sh start
/opt/xf/etc/init.d/eop.sh start
/opt/xf/etc/init.d/aprint.sh start


#To be able to open a telnet session to the CN modem from the NP you have to modify the firewall.
iptables -A port_mgmt -p all -j ACCEPT -s 192.168.0.1//169.254.5.2
telnet 169.254.5.2

mw w 6e000290 80 80
mw w 6e000294 0 80

miiw 0 31 0x10
miiw 0 18 0x80f0
miiw 0 31 0x00
miiw 0 0 0x9040
miiw 2 0 0x9040

makeview -rel tn51_bns_app -feat cn_roleselection_llv -int –unix

-bash-3.00# insmod /opt/xf/modules/fpga_load.ko
-bash-3.00# cat /proc/fpga_load_tdm

cp -f kernel.log* /var/fs/hotfix/bin
cp -f local.log* /var/fs/hotfix/bin


Tissot Couturier T035.210.16.011.00 2350 SEK	
Tissot Femini-T T053.310.11.057.00 3395 SEK


/etc/rc.d/rc3.d/S999znextlevel.sh start
cat /proc/interrupts

M:\xqinwan_nerd_llv1\tn_ethernet_bridge_src\crhr109004_2_ethernet_switch_nerd\caxr102075_1_ehsl\src\ehsl_sar.c@@\main\ln_tn5_1_lsv\ln_tn51_nerd_nerd_wp_cn_ans_bns_startup_llv\CHECKEDOUT.1160070

I have created a user "cnstartup" with password "minilink" on our lab server "gojje" at 10.41.24.18. There you can telnet to port 2019 for the npu and port 2004 for the mmu.
...to access the mockup.

./upload_sbl_xhonpen.sh /lab/minilink/ML_ftp/DELIVERABLES/Internal_SBL/CN510/R1AT/R1AT101_1.tgz

0A2910C7
0A290F08

to restart in PBist:
+ charactor --> Z --> 1 --> Enter memory address: 08000000 -> Enter number of entries (00-99): 01


vlan ip4 add IPaddr=169.254.1.1 NetMask=255.255.0.0 VLan=4095 Prio=7 Cng=0

##
As soon as I opened my wireshark, the message popped up: “The NPF driver isn’t running…
As a local administrator do this:
net start np

query winPCAP: sc qc npf
start WinPCAP: sc start npf
Auto start-up: sc config npf start=auto
#

My LAN MAC: 5C-26-0A-82-45-23

##FP filter
port ge5 en=y an=y stp=f
port ge6 en=y an=y stp=f
port ge7 en=y an=y stp=f
port ge8 en=y an=y stp=f
egr set p=ge2 m=0 pb=ge5-ge8,ge12
egr set p=ge5 m=0 pb=ge2
egr set p=ge6 m=0 pb=ge2
egr set p=ge7 m=0 pb=ge2
egr set p=ge8 m=0 pb=ge2
vlan add 4095 pbm=ge5-ge8 ubm=ge5-ge8
pv set ge5 4095
pv set ge6 4095
pv set ge7 4095
pv set ge8 4095


##create dcn over vlan##
port ge8 en=yes an=yes stp=f
port ge5 en=yes stp=f
egr set p=ge2 m=0 pb=cpu,ge4,ge12,ge5,ge8
egr set p=ge5 m=0 pb=ge2
egr set p=ge8 m=0 pb=ge2
vlan create 50 PortBitMap=ge2,ge8 UntagBitMap=ge2,ge8
pv set ge8 50

test:
(NP)ping 169.254.1.2
(NP)ping 10.41.16.177
(MP-uboot)ping 169.254.5.1

/*set dcn as over vlan*/
pv set ge2 50

test:
(NP)ping 169.254.1.2
(NP)ping 10.41.16.177
(MP-uboot)ping 169.254.5.1

/*Delete subnet based vlan*/
vlan ip4 delete IPaddr=169.254.0.0 NetMask=255.255.0.0

test:
(NP)ping 169.254.1.2
(NP)ping 10.41.16.177
(MP-uboot)ping 169.254.5.1

/*End ##create dcn over vlan##*/

$$ 
*Open tftp on linux
[root]# service xinetd restart
*check
[root]# netstat -a | grep tftp

$$
bcm-->mii-addr ?	//phy waw 0 29

$$
cc--> eclipse plugin

$$
nerd heartbeat missing	***

$#Linux Shell#$
--ok
awk '/emulated_pci_hsd/{if(f!=FILENAME){f=FILENAME;print f} print"\t"$0}' *	##"pci_hsd" is key word, * is file path_name
find "$PWD" -iname "*mkfs*"

@grep
1. Grep OR Using \|
If you use the grep command without any option, you need to use \| to separate multiple patterns for the or condition.
grep 'pattern1\|pattern2' filename
2. Grep OR Using -E
grep -E option is for extended regexp. If you use the grep command with -E option, you just need to use | to separate multiple patterns for the or condition.
grep -E 'pattern1|pattern2' filename
3.Grep OR Using grep -e
Using grep -e option you can pass only one parameter. Use multiple -e option in a single command to use multiple patterns for the or condition.
grep -e pattern1 -e pattern2 filename
5. Grep AND using -E ‘pattern1.*pattern2′
There is no AND operator in grep. But, you can simulate AND using grep -E option.
grep -E 'pattern1.*pattern2' filename
grep -E 'pattern1.*pattern2|pattern2.*pattern1' filename
7. Grep NOT using grep -v
Using grep -v you can simulate the NOT conditions. -v option is for invert match. i.e It matches all the lines except the given pattern.
grep -v 'pattern1' filename


$#Linux Shell#$end

Q: Should we "port ge5 en=no" ?

##open mmu port
#port ge12 stp=f
egr set p=ge5 m=0 pb=ge12
egr set p=ge12 m=0 pb=ge5
#vlan create 4000 PortBitMap=ge5,ge12 UntagBitMap=ge5,ge12
#pv set ge5,ge12 4000

Sutiation 2#:
port ge5 en=yes stp=f
egr set p=ge5 m=0 pb=ge12
egr set p=ge12 m=0 pb=ge5
vlan create 4000 PortBitMap=ge5,ge12 UntagBitMap=ge5,ge12
pv set ge5,ge12 4000

ex:vlan add 4095 PortBitMap=ge5,ge12 UntagBitMap=ge5,ge12

##update mmu u-boot
1,setenv ethaddr 00:32:11:22:ab:de(random)
2,setenv ipaddr 10.0.1.7
3,setenv serverip 10.0.1.5
4,tftp 44100000 mmu3a_uboot.bin(locate root folder)
5,protect off 0 5ffff
6,erase 0 5ffff
7,cp.b 44100000 0 u-boot.bin-lenth(get when finish step 4)
8,reset(check that everyting is working)

*update CN510 ads
1~3,as previous
4,erase_bank1 (this erases Flash bank 1)
5,tftp $loadaddr CXP9011133_10_R1A01_bank.bin (this copies the load module from the host to RAM memory on board)
6,copy_kernel (this copies the load module from RAM to Flash, starting from address 0x100000)
Once copy in flash is completed and u-boot prompt is back again give
7,boot
This should end with a Linux shell available (prompt #) and rlads_pdh process up and running.
To configure the board with a given frame format you can use
8,eh_set_config <frame format id>

###normal config:

CFE> printenv
Variable Name        Value
-------------------- --------------------------------------------------
BOOT_CONSOLE         uart0
ETH0_HWADDR          00-80-37-A9-C2-69
SWITCH_CONF          gmii
NERD_BOOT_FILE       169.254.1.1:1_19007-cxcr102044_1.elf.gz
NERD_NET_DEVICE      eth0
NERD_NET_IPADDR      169.254.1.2
NERD_NET_NETMASK     255.255.0.0
PBIST_SWITCH_CONF    cpu
PBIST_BOOT_FILE      10.0.1.5:1_19007-cxcr102044_1.elf.gz
PBIST_NET_DEVICE     eth0
PBIST_NET_IPADDR     10.0.1.100
PBIST_NET_NETMASK    255.255.255.0
CFE_VERSION          5.0.4
CFE_ARTICLE_NUMBER   CXC1731618_2
CFE_R_STATE          R1A02-development
CFE_BOARDNAME        CNx10
CFE_MEMORYSIZE       128
NET_DEVICE           eth0
NET_IPADDR           169.254.1.2
NET_NETMASK          255.255.0.0
NET_GATEWAY          0.0.0.0
NET_NAMESERVER       0.0.0.0
*** command status = 0

/*
The Ethernet is not broken at all, u-boot does not respond to a ping. Remember, u-boot is a boot loader
and monitor. It has many features that serve two main purposes: (1) hardware initialization/testing and
(2) loading and executing a kernel. To perform basic testing on your ethernet device you can use ping,
bootp, dhcp, tftpboot, nfs etc. from the u-boot command line. And all of the network commands
support booting a kernel via the network -- anything beyond testing/loading is outside the scope of
u-boot -- which is why u-boot supports "standalone" applications.

Yeah static IP worked for me. Was able to get wlan0 up and running. But then you have to give correct IP and DNS settings.
Also my Initial problem of Ubuntu on my laptop not able to Ping mini2440 with uboot got resolved.
I couldnt find the correct reason, but when I connected a L2 switch between my laptop and mini2440 it was able to do so.
The possible reason could be that Uboot initiates the ethernet link only when required, 
i.e when it sends a ARP message and then downs the link. It seems the current Atheors 8152 Driver for 
eth0 doesn't reply back if the link is down. So it never relies back to ARP. On connecting a L2 switch, 
the switch keeps the link layer up and then on receiving an ARP request for itself the Kernel replies. 
*/

NERD cli:
11:10Stridfeldt Mikael9. Run command "setenv SWITCH_CONF cpu"   (Sets the switch conf. printenv command shows config)
10. Run command  "ifconfig eth0 -off"
11. Run Command "ifconfig eth0 -addr=10.0.1.102 -mask=255.255.255.0"

##C pre define#
#define d(args...) { if (chlib_debug==1) aprint(SYSLOG,NOOP,args); }

  #define TNIPC_MPRINTK(mask,fmt,arg...)         \
    do {                                    \
        if((mask) & tnipc_debug_mask)          \
            printk(DEVICE_NAME fmt,##arg); \
    } while (0)

And:
#define DEBUG(x, y, ...) aprint(x, y, __VA_ARGS__)
#end#

##Temp###
#(gRLImeGroups) = *(int*)#(result_1);

#define IP_BASE_ADDRESS "169.254.5."
#define IP_PORT_NUMBER 13292
#define IP_SLOT_TRANSLATION_TABLE {IP_BASE_ADDRESS "10",IP_BASE_ADDRESS "1", IP_BASE_ADDRESS "2", IP_BASE_ADDRESS "3", IP_BASE_ADDRESS "4"}


1,MSG_BOARD_UP2_REQ
2,MSG_BOARD_DOWN_REQ
3,MSG_TM_ENTITY
4,MSG_BOARD_VALIDATE_REQ
5,MSG_TEST_BOARD_REMOVE_REQ



/*#CODE
printf("nans proof: success, %d, %s.\n",  #(tMsgMd5).digest, #(ch_pstr));
*/

/*#CODE
printf("nans proof: get no of rl-ime groups failed, res = %d, npu_name: %s\n", #(res), #(ch_pstr));
*/
##Temp###

##*******CLear Case*******##

1,
umask 0002
setenv CC_SITE ln_git
setenv TN_TOP /proj/tn/git

$TN_TOP/tools/scripts/clone_gits_repo bns_app hdp_lsv
$TN_TOP/tools/scripts/clone_gits_repo nerd_ads hdp_lsv

2,
module add git
module add gitslave
$TN_TOP/tools/scripts/envCheck.sh


Task:
inner-tag

#########fault mode#############
ifconfig eth0:1 10.80.41.171 netmask 255.255.255.0
route add default gw 10.80.41.1


##*******CLear Case End*******##


##*******CLear Case*******##
#makeview-IT-HUB
/cc/bin/makeview-mw

#remove element
rmelement

#Find specific branch
ct lstype -kin brtype | fgrep xhonpen

#find and mark lable

cd  /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src
cleartool mklabel -rep -recurse XTESA_TN5_BNS_HP33233_IMPROVE .
XTESA_TN5_BNS_HO97472

##cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src -ver 'created_by(pengghon)' -print
##cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src -type f -ele 'version(.../branch_name/LATEST)' -print
##cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns -version 'version(.../xrs12_tr_deliv_llv_dev_xrseger_HQ16038/LATEST)&&created_by(xhonpen)' -print \
-exec 'cleartool mklabel -rep -recurse LABLE_NAME $CLEARCASE_XPN'

##find files by lable:
cleartool find -all -version "lbtype_sub(MYLABEL) && !brtype(mybranch)" -print
##find files by date-time:
cleartool find -all -version "created_since(2012-07-10)" -print

##find && remove
cleartool rmver -xhl /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src/platform/(path)@@(version)

e.g.
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src -version "created_by(xhonpen)&&version(CHECKEDOUT)" -print
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/caxr102078_1_NPU_ANS -type f -ele 'version(.../ln_tn51_nans_wp_cn_ans_bns_startup_llv_dev_xhonpen/LATEST)' -print
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src -version "created_since(2012-08-01)&&created_by(xhonpen)&&version(CHECKEDOUT)" -print
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src/platform/eqm/eh -version 'created_since(2014-08-25)&&version(.../xrs1_nms_tco_llv_dev_NETB_xhonpen/LATEST)' -print \
-exec 'cleartool descr -fmt "%En %d\n" $CLEARCASE_XPN' 
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src/platform/ -version 'version(.../ln_tn5_1_lsv/LATEST)&&!(lbtype_sub(CXCR102007_2-R28A05)' -print
 && !(lbtype_sub(CXCR102007_2-R24A14)) && brtype(mwn_m13b_rel)&&created_by(EVIKBAL)' -print \
-exec 'cleartool descr -fmt "%En %d\n" $CLEARCASE_XPN' \

cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src/platform/eth/eps -version 'lbtype_sub(CXCR102007_2-R24B01) && !(lbtype_sub(CXCR102007_2-R24A23)) && brtype(mwn_m13b_rel)&&created_by(EVIKBAL)' -print \
-exec 'cleartool descr -fmt "%En %d\n" $CLEARCASE_XPN' \

*********
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src -version 'version(.../ln_tn51_bns_app_wp_dev_hr83925/LATEST)' -print \
-exec 'cleartool mklabel -rep -recurse LN_TN51_BNS_APP_DEV_HR40712 $CLEARCASE_XPN'
cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/caxr102078_1_NPU_ANS -version 'version(.../ln_tn51_nans_wp_dev_hr83925/LATEST)' -print \
-exec 'cleartool mklabel -rep -recurse LN_TN51_NANS_DEV_HR49199 $CLEARCASE_XPN'
***********
cleartool find /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd -version 'version(.../xrs3_tr_HP46503/LATEST)' -print
##################

cleartool find /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd -version "created_since(2012-08-01)&&{created_by(xtiajun)||created_by(xqinwan)}&&version(CHECKEDOUT)" -print

cleartool find /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd -version 'created_by(xhonpen)' -print

cleartool find /vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/caxr102078_1_NPU_ANS -version 'version(.../xtesa_tn5_nans_dev_hp25281/LATEST)&&created_by(xhonpen)' -print \
-exec 'cleartool mklabel -rep -recurse XTESA_TN5_NANS_HP25281_I41 $CLEARCASE_XPN'

cleartool find /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd/ -version 'version(.../ln_tn51_nerd_wp_cn_roleselection_llv_dev_xhonpen/LATEST)' -print \
-exec 'cleartool mklabel -rep -recurse XTESA_TN44FP_BNS_APP_PACKET_LINK $CLEARCASE_XPN'

cleartool find /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd/caxr102075_2_switch_drv/src/sdk_init.c -version 'created_since(2013-04-30)&&created_by(xhonpen)' -print

cleartool find /vobs/product/dxc_ip/tn_ethernet_bridge_src/crhr109004_2_ethernet_switch_nerd/ -version 'lbtype_sub(CXCR102044_1-R13A12) && !(lbtype_sub(CXCR102044_1-R13A11))' -print


#find and mark lable end.
/vobs/product/dxc_ip/xf_bns_src/cnxr10201_1_bns/bns_app_src/platform/eqm/tnipc_dp-drv/src/tnipc_dp_init.c@@/main/ln_tn5_1_lsv/mwn_m13b_rel/ln_tn51_bns_app_wp_dev_hr40712/9
##*******CLear Case******* End##





alarm-enable-Resource-oversubscription
        help Enable Resource oversubscription alarms
        exec cli_cmd_imeps()
HP25281:
<signal name="DcnEthPortCliCmdRes" group="internal" inherits="SigHdr" level="app_ans">
  <description>
     For cli dcn-mode command response.
  </description>
  <routes>
    <route dest="CLI" src="Dcnhdlrp"/>
  </routes>
  <increment number="3"/>
</signal>

shBnfCliRes!slot :=  sigHdr!slot,
shBnfCliRes!port :=  gMngtPort,
shBnfCliRes!sigId := orginatorSigId,

<signal name="BnfCLICommandRes" group="bnf" inherits="SigHdrBnf" level="app_ans">
  <description>
Fucts.
  </description>
  <routes>
    <route dest="Routerp" src="Dcnhdlrp"/>
    <route dest="BNF" src="Routerp"/>
  </routes>
  <bnfsignal name="MSG_COMMAND_GROUP_DONE" direction="BNF_NO_RESPONSE"/>
  <increment number="1"/>
</signal>

HP23669:

network-synch.node-clock
        help  Enable use of 2Mhz node clock
        
network-synch.node-clock.IFNAME
        help  Interface name
        vrfy  vrfy_dummy()
        exec cmd_config_network_synch()
        arg 13

no.network-synch.node-clock
        help  Disable use of 2Mhz node clock

no.network-synch.node-clock.IFNAME
        help  Interface name
        vrfy  vrfy_dummy()
        exec cmd_config_network_synch()
        arg 14
/**
 * Node clock (2MHz on NPU) enable & refresh, appointed.
  */
int synch_node_clock_ifname(char *if_name, int enable)
{
  traffic_handler_t *th_p;
  th_slot_t         *sl_p;
  th_port_t         *e1_clock_p = NULL;
  int i;

  LPRINTF3("%s::%s\n",__FILE__,__FUNCTION__);

  th_p = get_th();

  sl_p = th_p->slot_p[th_p->master_npu_slot];
  if (sl_p==NULL) return 0;

  for (i=0;i<sl_p->no_of_ports;i++)
  {
    if (sl_p->ports[i] != NULL &&
   	!strcmp(sl_p->ports[i]->port, if_name))
     {
      aprint(SYSLOG, NOOP, "synch_node_clock_ifname: found target port");
      e1_clock_p = sl_p->ports[i];
      set_2mhz_synch_clock(e1_clock_p, enable);
      break;
    }
  }

  if(i >= sl_p->no_of_ports){
 setgloberr(err_iface);
 return 0;
  }

  return 1;
}
 if(!synch_node_clock_ifname(cmdp->argv[LAST_PAR], 1)){
 return 0;
 }
HP23669: end.


if(!strcmp(cmdp->argv[cmdp->argc-2], "so")){
do{
lct_get(OID_xfConfigStatus, &config_column, NULL, "0", NULL);
(void) wait_for_and_handle_event();
}while(!strcmp(config_column.value, "4"));	//configDownLoading(4)

if(strcmp(config_column.value, "5")){	//configDownLoadOK(5)
seterrstr(TYPE_ERROR, "copy startup-config file failed.");
return FALSE;
}
}

        if(!IsPureNumeral(cmdp->argv[LAST_PAR])){
        SET_ERROR(err_number);
        }
        else{
        data = atoi(cmdp->argv[LAST_PAR]);
        }
int cli_cmd_pl_translate_rsp(char *info_rsp, static_if_index_rack_t rack)
{
char str_rsp[3][10];
int value_rsp[3];

if(3 == sscanf(info_rsp, "%[^/]/%[^/]/%s", str_rsp[0], str_rsp[1], str_rsp[2])){
        char *ptarg;

        value_rsp[0] = strtol(str_rsp[0], &ptarg, 10);
        if('\0' != *ptarg){
        setgloberr(err_rsp);
        return 0;
        }
        value_rsp[1] = strtol(str_rsp[1], &ptarg, 10);
        if('\0' != *ptarg){
        setgloberr(err_rsp);
        return 0;
        }
        value_rsp[2] = strtol(str_rsp[2], &ptarg, 10);
        if('\0' != *ptarg){
        setgloberr(err_rsp);
        return 0;
        }
}

return agentx_generate_static_if_index(STATIC_IF_INDEX_DEFAULT_PREFIX,
rack,
STATIC_IF_INDEX_APP_ETH_BRG,
STATIC_IF_INDEX_IF_DESCR_LAN,
STATIC_IF_INDEX_PROTECTED,
value_rsp[1],
value_rsp[2]);
}


/////////////////////////////////////retreve info from configure file.
{
FILE* file_fd;
char* rtn_getfile;
char Temp[3][32];
char buf[256];

file_fd = fopen("/var/usr/tmp_config/start_up_config.ftp.txt", "r");
if(NULL == file_fd){
seterrstr(TYPE_ERROR, "Fail to open start_up_config file.");
return FALSE;
}

//Get Created Time
    while (NULL != (rtn_getfile=fgets(buf, 256, file_fd))) {
        if (1==sscanf(buf, "! DO NOT REMOVE! Version:%*d Time saved:%[^=]", Temp[0])){
        printf("Get Created Time: %s\n", Temp[0]);
            break;
        }
    }
if(NULL == rtn_getfile){
seterrstr(TYPE_ERROR, "Fail to read start_up_config file.");
fclose(file_fd);
return FALSE;
}

//Get IP Address, Subnet Mask
    while (NULL != (rtn_getfile=fgets(buf, 256, file_fd))) {
        if (2==sscanf(buf, "ip address %s %s", Temp[0], Temp[1])){
        printf("Get Subnet: %s %s\n", Temp[0], Temp[1]);
            break;
        }
    }
if(NULL == rtn_getfile){
seterrstr(TYPE_ERROR, "Fail to read start_up_config file.");
fclose(file_fd);
return FALSE;
}

//Get Backplane Product Number and Revision
    while (NULL != (rtn_getfile=fgets(buf, 256, file_fd))) {
        if (2==sscanf(buf, "subrack %*d backplane %*d \"%[^\"]\" \"%[^\"]", Temp[0], Temp[1])){
        printf("Get Backplane: %s, %s\n", Temp[0], Temp[1]);
            break;
        }
    }
if(NULL == rtn_getfile){
seterrstr(TYPE_ERROR, "Fail to read start_up_config file.");
fclose(file_fd);
return FALSE;
}

Temp[0][0] = 0;
//Get Board Position, Product Number and Revision(should be a serial)
    while (NULL != (rtn_getfile=fgets(buf, 256, file_fd))) {
        if (3==sscanf(buf, "board %s type \"%[^\"]\" \"%[^\"]", Temp[0], Temp[1], Temp[2])){
        printf("Get Board: %s %s %s\n", Temp[0], Temp[1], Temp[2]);
        }
        else if(Temp[0][0]){
        break;
        }
    }
if(NULL == rtn_getfile){
seterrstr(TYPE_ERROR, "Fail to read start_up_config file.");
fclose(file_fd);
return FALSE;
}
}


